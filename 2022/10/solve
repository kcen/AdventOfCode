#!/usr/bin/env ruby
input = ARGF.readlines.map do |line|
  cmd, val = line.split(/\s/)
  [cmd, val.to_i]
end

CPU = Struct.new(:cycle, :register, :strength, :crt) do
  def tick
    c40 = cycle % 40
    sprite = (c40 - 1)..(c40 + 1)
    if sprite.include? register
      crt << "#"
    else
      crt << "."
    end
    self.cycle += 1
    c40 = cycle % 40
    strength << cycle * register if c40 == 20 # Offest for 0 cycle
  end
end

@cpu = CPU.new(0, 1, [], [])

input.each do |cmd, val|
  @cpu.tick
  if cmd == "addx"
    @cpu.tick
    @cpu.register += val
  end
end

pt1 = @cpu.strength.sum
pt2 = @cpu.crt.each_slice(40).map { |l| l.to_a.join("") }.join("\n")

puts "{\"part_one\":%d,\"part_two\":%s}" % [@cpu.strength.sum, pt2.inspect]
