#!/usr/bin/env ruby

class ShippingYard
  attr_accessor :yard, :rev

  def initialize(yard_str, is_9000 = true)
    self.rev = is_9000
    self.yard = _parse_yard(yard_str)
  end

  def do_move(move)
    qty, from, to = _parse_move(move)
    moved = yard[from - 1].pop(qty)
    moved.reverse! if rev == true
    yard[to - 1].push(*moved)
  end

  def _parse_yard(yard_str)
    yard_str.lines[0..-2].map do |row|
      row.ljust(9 * 4, ' ').chars
         .each_slice(4)
         .map { |x| x[1][/\S/] }
    end.transpose.map(&:reverse).map(&:compact)
  end

  def _parse_move(move)
    move.scan(/\d+/).map(&:to_i)
  end
end

yard_str, moves_str = ARGF.read.split("\n\n")
yard = ShippingYard.new(yard_str)
yard2 = ShippingYard.new(yard_str, is_9000 = false)
moves_str.lines
         .each do |move|
  yard.do_move(move)
  yard2.do_move(move)
end
puts "{\"part_one\":\"%s\",\"part_two\":\"%s\"}" % [
  yard.yard.map(&:last).join,
  yard2.yard.map(&:last).join
]
